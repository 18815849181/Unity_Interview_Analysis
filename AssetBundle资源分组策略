总体上来说，分组策略主要是以下几种：

关注打包策略的原因：
AssetBundle打包的资源是存在依赖关系的,你打包了这个资源依赖于另一个资源他会自动的把依赖资源也打进这个包,
、如果不注意打包的策略,就会发生同一个资源被重复的打包,产生资源冗余,比如你要把不同的UI类型分开打包,他们都会把自己
使用的图集都打到AB包中,这样直接进行打包,那这个贴图就会被打入AB包两次,很浪费资源,所以在打包的时候要注意打包策略


1，把经常更新的资源放在一个单独的包里面，跟不经常更新的包分离
2，把需要同时加载的资源放在一个包里面
3，可以把其他包共享的资源放在一个单独的包里面
4，把一些需要同时加载的小资源打包成一个包
5，如果对于一个同一个资源有两个版本，可以考虑通过后缀来区分，如： v1  v2  v3 



逻辑实体分组：
1）UI界面或者所有UI界面一个包 【界面当中包含的贴图和布局信息一个包】
2）个角色或者所有角色一个包（这个角色里面的模型和动画一个包）
3）场景所共享的部分一个包（包括贴图和模型）

按类型分组：
声音资源打成一个包，所有shader打成一个包，所有模型打成一个包，所有材质打成一个包


按照使用分组
把在某一时间内使用的所有资源打成一个包。可以按照关卡分，一个关卡所需要的所有资源，
包括贴图、声音等打成一个包。也可以按照场景分，一个场景所需要的资源一个包。模型和动画可以根据角色来
分开打包。




AssetBundle依赖关系：

必须基于资源关系进行打包，主要是为了减少内存等资源的占用，在手游领域尤其重要、
那么如何分析和设置资源之间的依赖关系呢？？
检测资源之间的依赖关系，遍历每一个有引用的资源进行分析。



Shader,Font资源：
Shader资源被很多需要绘制的资源有关，所有可以把所有的Shader单独打包成一个Bundle。
Font资源被所有的UI资源引用，单独打包成为一个公用Bundle.


Material,Mesh,Animation资源：
先将这些资源抽离达成共享包后，剩下的文本数据很小。可以把多个Prefab达成一个Bundle.

Unity5采用新的打包机制，只需要将相同资源的AssetBundle设置好，打包时自动抽离资源。



AssetBundle打包工具：
针对Unity5.6+ 版本，可以使用AssetBundle-Browser来可视化处理打包。





参考资料：
Unity资源打包之Asset Bundle ： https://www.jianshu.com/p/5d4145cd900c
